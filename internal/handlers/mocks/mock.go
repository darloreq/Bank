// Code generated by MockGen. DO NOT EDIT.
// Source: init.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	entity "coolBank/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHeadHandler is a mock of HeadHandler interface.
type MockHeadHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHeadHandlerMockRecorder
}

// MockHeadHandlerMockRecorder is the mock recorder for MockHeadHandler.
type MockHeadHandlerMockRecorder struct {
	mock *MockHeadHandler
}

// NewMockHeadHandler creates a new mock instance.
func NewMockHeadHandler(ctrl *gomock.Controller) *MockHeadHandler {
	mock := &MockHeadHandler{ctrl: ctrl}
	mock.recorder = &MockHeadHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHeadHandler) EXPECT() *MockHeadHandlerMockRecorder {
	return m.recorder
}

// ChangeBalance mocks base method.
func (m *MockHeadHandler) ChangeBalance(userID int, amount entity.ChangeBalance, operationType string) (entity.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeBalance", userID, amount, operationType)
	ret0, _ := ret[0].(entity.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeBalance indicates an expected call of ChangeBalance.
func (mr *MockHeadHandlerMockRecorder) ChangeBalance(userID, amount, operationType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeBalance", reflect.TypeOf((*MockHeadHandler)(nil).ChangeBalance), userID, amount, operationType)
}

// CreateUser mocks base method.
func (m *MockHeadHandler) CreateUser(user entity.CreateUser) entity.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", user)
	ret0, _ := ret[0].(entity.User)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockHeadHandlerMockRecorder) CreateUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockHeadHandler)(nil).CreateUser), user)
}

// ShowBalance mocks base method.
func (m *MockHeadHandler) ShowBalance(user entity.User) (entity.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowBalance", user)
	ret0, _ := ret[0].(entity.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShowBalance indicates an expected call of ShowBalance.
func (mr *MockHeadHandlerMockRecorder) ShowBalance(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowBalance", reflect.TypeOf((*MockHeadHandler)(nil).ShowBalance), user)
}
